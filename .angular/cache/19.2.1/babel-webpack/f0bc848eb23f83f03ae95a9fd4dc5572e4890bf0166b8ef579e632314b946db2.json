{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthService = class AuthService {\n  constructor() {}\n  isLoggedIn() {\n    // Dummy login check, replace with real logic\n    return !!localStorage.getItem('user');\n  }\n  login(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  logout() {\n    localStorage.removeItem('user');\n  }\n  static ctorParameters = () => [];\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":{"version":3,"names":["Injectable","AuthService","constructor","isLoggedIn","localStorage","getItem","login","user","setItem","JSON","stringify","logout","removeItem","__decorate","providedIn"],"sources":["E:\\folk1\\building\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() { }\r\n\r\n  isLoggedIn(): boolean {\r\n    // Dummy login check, replace with real logic\r\n    return !!localStorage.getItem('user');\r\n  }\r\n\r\n  login(user: any) {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAKnC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,UAAUA,CAAA;IACR;IACA,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC;EAEAC,KAAKA,CAACC,IAAS;IACbH,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;EACpD;EAEAI,MAAMA,CAAA;IACJP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EACjC;;;AAfWX,WAAW,GAAAY,UAAA,EAHvBb,UAAU,CAAC;EACVc,UAAU,EAAE;CACb,CAAC,C,EACWb,WAAW,CAgBvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}