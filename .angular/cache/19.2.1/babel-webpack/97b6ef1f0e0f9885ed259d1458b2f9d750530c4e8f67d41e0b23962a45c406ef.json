{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nlet OwnerAuthGuard = class OwnerAuthGuard {\n  router;\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate() {\n    const isLoggedIn = localStorage.getItem('isOwnerLoggedIn') === 'true';\n    if (!isLoggedIn) {\n      this.router.navigate(['/owner-login']);\n      return false;\n    }\n    return true;\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }];\n};\nOwnerAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], OwnerAuthGuard);\nexport { OwnerAuthGuard };","map":{"version":3,"names":["Injectable","Router","OwnerAuthGuard","router","constructor","canActivate","isLoggedIn","localStorage","getItem","navigate","__decorate","providedIn"],"sources":["E:\\folk1\\building\\src\\app\\guards\\owner-auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OwnerAuthGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    const isLoggedIn = localStorage.getItem('isOwnerLoggedIn') === 'true';\r\n    if (!isLoggedIn) {\r\n      this.router.navigate(['/owner-login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAsBC,MAAM,QAAQ,iBAAiB;AAK9C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EACLC,MAAA;EAApBC,YAAoBD,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCE,WAAWA,CAAA;IACT,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;IACrE,IAAI,CAACF,UAAU,EAAE;MACf,IAAI,CAACH,MAAM,CAACM,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACtC,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;;;;;AAVWP,cAAc,GAAAQ,UAAA,EAH1BV,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,C,EACWT,cAAc,CAW1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}