{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./navbar.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./navbar.component.css?ngResource\";\nimport { Component, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nlet NavbarComponent = class NavbarComponent {\n  router;\n  constructor(router) {\n    this.router = router;\n  }\n  isScrolled = false;\n  ngOnInit() {\n    this.router.events.subscribe(() => {\n      const navbarCollapse = document.getElementById('navbarNav');\n      if (navbarCollapse && navbarCollapse.classList.contains('show')) {\n        // @ts-ignore: Assuming bootstrap is globally available\n        const bsCollapse = new window.bootstrap.Collapse(navbarCollapse, {\n          toggle: false\n        });\n        bsCollapse.hide();\n      }\n    });\n  }\n  onWindowScroll() {\n    const scrollOffset = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n    this.isScrolled = scrollOffset > 50;\n  }\n  closeNavbar(navbarCollapse) {\n    if (window.innerWidth < 992) {\n      const bsCollapse = new window.bootstrap.Collapse(navbarCollapse, {\n        toggle: false\n      });\n      bsCollapse.hide();\n    }\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }];\n  static propDecorators = {\n    onWindowScroll: [{\n      type: HostListener,\n      args: ['window:scroll', []]\n    }]\n  };\n};\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  standalone: false,\n  // Only needed if using standalone components\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], NavbarComponent);\nexport { NavbarComponent };","map":{"version":3,"names":["Component","HostListener","Router","NavbarComponent","router","constructor","isScrolled","ngOnInit","events","subscribe","navbarCollapse","document","getElementById","classList","contains","bsCollapse","window","bootstrap","Collapse","toggle","hide","onWindowScroll","scrollOffset","pageYOffset","documentElement","scrollTop","body","closeNavbar","innerWidth","args","__decorate","selector","standalone","template","__NG_CLI_RESOURCE__0"],"sources":["E:\\folk1\\building\\src\\app\\navbar\\navbar.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  standalone: false, // Only needed if using standalone components\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.css'\r\n})\r\nexport class NavbarComponent {\r\n\r\n  constructor(public router: Router){}\r\n  isScrolled: boolean = false;\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe(() => {\r\n      const navbarCollapse = document.getElementById('navbarNav');\r\n      if (navbarCollapse && navbarCollapse.classList.contains('show')) {\r\n        // @ts-ignore: Assuming bootstrap is globally available\r\n        const bsCollapse = new (window as any).bootstrap.Collapse(navbarCollapse, {\r\n          toggle: false\r\n        });\r\n        bsCollapse.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    const scrollOffset = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n    this.isScrolled = scrollOffset > 50; \r\n  }\r\n\r\n  closeNavbar(navbarCollapse: HTMLElement) {\r\n    if (window.innerWidth < 992) {\r\n      const bsCollapse = new (window as any).bootstrap.Collapse(navbarCollapse, {\r\n        toggle: false\r\n      });\r\n      bsCollapse.hide();\r\n    }\r\n  }\r\n\r\n\r\n}"],"mappings":";;;AACA,SAASA,SAAS,EAAEC,YAAY,QAAQ,eAAe;AACvD,SAASC,MAAM,QAAQ,iBAAiB;AAQjC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAEPC,MAAA;EAAnBC,YAAmBD,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAU;EACnCE,UAAU,GAAY,KAAK;EAE3BC,QAAQA,CAAA;IACN,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,SAAS,CAAC,MAAK;MAChC,MAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;MAC3D,IAAIF,cAAc,IAAIA,cAAc,CAACG,SAAS,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/D;QACA,MAAMC,UAAU,GAAG,IAAKC,MAAc,CAACC,SAAS,CAACC,QAAQ,CAACR,cAAc,EAAE;UACxES,MAAM,EAAE;SACT,CAAC;QACFJ,UAAU,CAACK,IAAI,EAAE;MACnB;IACF,CAAC,CAAC;EACJ;EAGAC,cAAcA,CAAA;IACZ,MAAMC,YAAY,GAAGN,MAAM,CAACO,WAAW,IAAIZ,QAAQ,CAACa,eAAe,CAACC,SAAS,IAAId,QAAQ,CAACe,IAAI,CAACD,SAAS,IAAI,CAAC;IAC7G,IAAI,CAACnB,UAAU,GAAGgB,YAAY,GAAG,EAAE;EACrC;EAEAK,WAAWA,CAACjB,cAA2B;IACrC,IAAIM,MAAM,CAACY,UAAU,GAAG,GAAG,EAAE;MAC3B,MAAMb,UAAU,GAAG,IAAKC,MAAc,CAACC,SAAS,CAACC,QAAQ,CAACR,cAAc,EAAE;QACxES,MAAM,EAAE;OACT,CAAC;MACFJ,UAAU,CAACK,IAAI,EAAE;IACnB;EACF;;;;;;YAbCnB,YAAY;MAAA4B,IAAA,GAAC,eAAe,EAAE,EAAE;IAAA;;;AAlBtB1B,eAAe,GAAA2B,UAAA,EAN3B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,YAAY;EACtBC,UAAU,EAAE,KAAK;EAAE;EACnBC,QAAA,EAAAC,oBAAsC;;CAEvC,CAAC,C,EACW/B,eAAe,CAkC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}