{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nlet LoginComponent = class LoginComponent {\n  fb;\n  router;\n  loginForm;\n  errorMessage = '';\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    if (email === 'test@example.com' && password === '123456') {\n      localStorage.setItem('isLoggedIn', 'true');\n      this.router.navigate(['/store']);\n    } else {\n      this.errorMessage = 'Invalid email or password.';\n    }\n  }\n  onReset() {\n    this.loginForm.reset();\n    this.errorMessage = '';\n  }\n  static ctorParameters = () => [{\n    type: FormBuilder\n  }, {\n    type: Router\n  }];\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  standalone: false,\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","FormBuilder","Validators","Router","LoginComponent","fb","router","loginForm","errorMessage","constructor","group","email","required","password","onSubmit","value","localStorage","setItem","navigate","onReset","reset","__decorate","selector","standalone","template","__NG_CLI_RESOURCE__0"],"sources":["E:\\folk1\\building\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: false,\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  errorMessage: string = '';\r\n\r\n  constructor(private fb: FormBuilder, private router: Router) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    const { email, password } = this.loginForm.value;\r\n\r\n    if (email === 'test@example.com' && password === '123456') {\r\n      localStorage.setItem('isLoggedIn', 'true');\r\n      this.router.navigate(['/store']);\r\n    } else {\r\n      this.errorMessage = 'Invalid email or password.';\r\n    }\r\n  }\r\n\r\n  onReset() {\r\n    this.loginForm.reset();\r\n    this.errorMessage = '';\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,MAAM,QAAQ,iBAAiB;AAQjC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAILC,EAAA;EAAyBC,MAAA;EAH7CC,SAAS;EACTC,YAAY,GAAW,EAAE;EAEzBC,YAAoBJ,EAAe,EAAUC,MAAc;IAAvC,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IACjD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACK,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,MAAM;MAAEH,KAAK;MAAEE;IAAQ,CAAE,GAAG,IAAI,CAACN,SAAS,CAACQ,KAAK;IAEhD,IAAIJ,KAAK,KAAK,kBAAkB,IAAIE,QAAQ,KAAK,QAAQ,EAAE;MACzDG,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;MAC1C,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,MAAM;MACL,IAAI,CAACV,YAAY,GAAG,4BAA4B;IAClD;EACF;EAEAW,OAAOA,CAAA;IACL,IAAI,CAACZ,SAAS,CAACa,KAAK,EAAE;IACtB,IAAI,CAACZ,YAAY,GAAG,EAAE;EACxB;;;;;;;AAzBWJ,cAAc,GAAAiB,UAAA,EAN1BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,KAAK;EACjBC,QAAA,EAAAC,oBAAqC;;CAEtC,CAAC,C,EACWrB,cAAc,CA0B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}